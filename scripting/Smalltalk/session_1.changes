'From Pharo4.0 of 18 March 2013 [Latest update: #40607] on 14 April 2015 at 9:52:49.547808 am'!----STARTUP----2015-04-14T09:52:16.024237+02:00 as /Users/denker/Desktop/40607/Pharo-40607.image!----QUIT----2015-04-14T09:52:53.433201+02:00 Pharo-40607.image priorSource: 0!----STARTUP----2015-04-14T09:53:10.503839+02:00 as /Users/denker/Desktop/40607/Pharo-40607.image!----QUIT----2015-04-14T09:53:23.786467+02:00 Pharo-40607.image priorSource: 196!----STARTUP----2015-04-14T12:27:52.175891+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 4/14/2015 12:25' prior: 55184883!commentForCurrentUpdate ^ 'new .sources'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 4/14/2015 12:25'!script608	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.189.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.683.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.120.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1009.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.341.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.55.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-StephaneDucasse.35.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.8.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-StephaneDucasse.1091.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 4/14/2015 12:25'!update40608	"self new update40608"	self withUpdateLog: 'new .sources'.	self loadTogether: self script608 merge: false.	self flushCaches.self cleanRepositories.! !ScriptLoader removeSelector: #update40607!ScriptLoader removeSelector: #script607!"ScriptLoader40"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.786.mcz') load.ScriptLoader new update40608.!----End fileIn----!----QUIT----2015-04-14T12:27:53.326572+02:00 Pharo.image priorSource: 376!----STARTUP----2015-04-14T12:27:53.4798+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-14T12:27:57.217802+02:00 Pharo.image priorSource: 15532!----STARTUP----2015-04-14T12:42:49.686617+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-04-14T12:42:49.754863+02:00 Pharo-40608.image priorSource: 15722!----STARTUP----2015-04-15T17:06:01.522135+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'EstebanLorenzano 4/15/2015 17:02' prior: 33555098!commentForCurrentUpdate ^ '15341 remove download sources setting	https://pharo.fogbugz.com/f/cases/1534115342 Metaclasses should not have a source pointer	https://pharo.fogbugz.com/f/cases/15342'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'EstebanLorenzano 4/15/2015 17:02'!script609	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.189.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.683.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.120.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1009.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.341.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.55.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.8.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'EstebanLorenzano 4/15/2015 17:02'!update40609	"self new update40609"	Smalltalk allClasses do: [ :each | each class organization comment: nil; commentStamp: nil ].	self withUpdateLog: '15341 remove download sources setting	https://pharo.fogbugz.com/f/cases/1534115342 Metaclasses should not have a source pointer	https://pharo.fogbugz.com/f/cases/15342'.	self loadTogether: self script609 merge: false.	[ | workspace window |		workspace := Workspace openContents: '"Pharo 4.0=========Welcome to Pharo, an immersive live programming environment.You can learn pharo by highlighting the next line and selecting [Do it] from the context menu:"PharoTutorial go."Pharo 4.0 already comes pre-loaded with a rich set of packages that you can use to explore the system and develop your own applications. However there is also a huge library of user contributed projects that you can also load using the ''Configurations Browser'' by executing:"MetacelloConfigurationBrowser open."This browser is also accessible from the World | Tools menu (just click the desktop, select Tools, and then Configuration Browser).You can find information about Pharo on http://www.pharo.org. Some useful starting points are:- Joining us and getting help http://www.pharo.org/get-help- Getting the Pharo By Example book (available as a free PDF): http://www.pharobyexample.org- Browser the documentation http://www.pharo.org/documentation- Reporting problems http://www.pharo.org/get-involvedAbout this release---------------------------There are more than 1600 issues treated in this release. Sumarized issues for 4.0:=========================New stuff---------- GTools (Playground, Inspector, Spotter)- Slots model instance variables as first class enities and enable meta-programming on this level.- ShoreLine reporter: submit information automatically when errors happen- TxModel, a modern text model who works with Athens (Preview)- OSWindow, a new way to handle windows and input events (Preview)- Glamour, a mature declarative browser builder- Dark themeUpdated stuff-------------- Zinc/Zodiac- Fuel- VersionnerAnd a lot more!!You can check a more detailed explanation here: https://github.com/pharo-project/pharo-changelogs/blob/master/Pharo40ChangeLogs.md"'	label: 'Welcome to Pharo 4.0!!'.	window := workspace dependents detect: [ :each | 		(each isKindOf: SystemWindow) and: [ each label = 'Welcome to Pharo 4.0!!' ] ].	window extent: 700@400.window center: Display extent / 2  ] value.	self flushCaches.self cleanRepositories.! !ScriptLoader removeSelector: #update40608!ScriptLoader removeSelector: #script608!"ScriptLoader40"!!SmalltalkImage commentStamp: 'StephaneDucasse 6/7/2011 15:48' prior: 55982943!My singleton is a central entry point to the system.It has many roles and responsibilities (to be documented)	- startup/shutdown image	- source management	- namespace access	- tool access	- platform access	- VM information and parameters		Startup-----------At startup and shutdown the image execute the methods startUp: and shutdown: of registered classes (registered using addToStartUpList:, addToShutDownList:, ... methods and friends).	Startup phasesDuring the first stage of start up the UI manager, the default uimanager is switched to a specific non interactive ui manager (StartupUIManager). Note that this specific non interactive UIManager kills the system on any attempt to open windows and interaction. So be warned, don't use interaction in the first phase. Then all registered classes execute their start up procedures (which should not imply interactive behavior). After startup list is finished, any deferred startup actions are executed, which you can add using the methodaddDeferredStartupAction: method.  !!SystemSystemSettings class methodsFor: 'settings' stamp: 'EstebanLorenzano 4/15/2015 15:03' prior: 58207175!systemSettingOn: aBuilder	<systemsettings>	(aBuilder group: #pharoSystem) 		label: 'System';		description: 'General system settings' ;		with: [			(aBuilder setting: #serverMode)				label: 'Server mode';				target: WorldState;				description: 'If enabled, then each main rendering loop will always wait a complete delay of 50ms' .			(aBuilder setting: #useLocale)				label: 'Use locale';				target: Locale;				selector: #activated;				description: 'Use the system locale to set the system language at startup.']! !!SmalltalkImage commentStamp: 'StephaneDucasse 6/7/2011 15:48' prior: 33587555!My singleton is a central entry point to the system.It has many roles and responsibilities (to be documented)	- startup/shutdown image	- source management	- namespace access	- tool access	- platform access	- VM information and parameters		Startup-----------At startup and shutdown the image execute the methods startUp: and shutdown: of registered classes (registered using addToStartUpList:, addToShutDownList:, ... methods and friends).	Startup phasesDuring the first stage of start up the UI manager, the default uimanager is switched to a specific non interactive ui manager (StartupUIManager). Note that this specific non interactive UIManager kills the system on any attempt to open windows and interaction. So be warned, don't use interaction in the first phase. Then all registered classes execute their start up procedures (which should not imply interactive behavior). After startup list is finished, any deferred startup actions are executed, which you can add using the methodaddDeferredStartupAction: method.  !SmalltalkImage removeSelector: #shouldDownloadSourcesFile!SmalltalkImage class removeSelector: #shouldDownloadSourcesFile:!SmalltalkImage class removeSelector: #shouldDownloadSourcesFile!"Settings-System"!"System-Support"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-EstebanLorenzano.789.mcz') load.ScriptLoader new update40609.!----End fileIn----!----QUIT----2015-04-15T17:06:04.321261+02:00 Pharo.image priorSource: 15916!----STARTUP----2015-04-15T17:06:04.475077+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-15T17:06:08.61668+02:00 Pharo.image priorSource: 36763!----STARTUP----2015-10-04T21:29:54.885992-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!----QUIT/NOSAVE----2015-10-04T21:30:46.488085-05:00 Pharo4.0.image priorSource: 36957!----STARTUP----2015-10-04T21:33:22.302716-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!----QUIT----2015-10-04T21:35:21.822311-05:00 Pharo4.0.image priorSource: 36957!----STARTUP----2015-10-08T12:34:45.554574-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!!PharoSyntaxTutorial methodsFor: 'interactive' stamp: 'AutoGenTutorial 10/8/2015 13:02' prior: 51150071!divideTwoByZero			2/0.			"Oups!! 2/0 raises a ZeroDivide exception.  So the debugger opens to let you fix the code.			- Remove the line of code above.			- Right-click and select 'Accept' to compile the new version of the method			- click the button 'Proceed' to continue execution.			".			PharoTutorial next. ! !!PharoTutorial class methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/8/2015 13:31'!goToNextLesson  self next! !PharoTutorial class removeSelector: #goToNextLesson!!PharoSyntaxTutorial methodsFor: 'interactive' stamp: 'AutoGenTutorial 10/8/2015 13:32' prior: 33592065!divideTwoByZero			2/0.			"Oups!! 2/0 raises a ZeroDivide exception.  So the debugger opens to let you fix the code.			- Remove the line of code above.			- Right-click and select 'Accept' to compile the new version of the method			- click the button 'Proceed' to continue execution.			".			PharoTutorial next. ! !!PharoSyntaxTutorial methodsFor: 'interactive' stamp: 'AutoGenTutorial 10/8/2015 13:33' prior: 33592673!divideTwoByZero			2/0.			"Oups!! 2/0 raises a ZeroDivide exception.  So the debugger opens to let you fix the code.			- Remove the line of code above.			- Right-click and select 'Accept' to compile the new version of the method			- click the button 'Proceed' to continue execution.			".			PharoTutorial next. ! !!PharoSyntaxTutorial methodsFor: 'interactive' stamp: 'AutoGenTutorial 10/8/2015 13:33' prior: 33593100!divideTwoByZero			2/0.			"Oups!! 2/0 raises a ZeroDivide exception.  So the debugger opens to let you fix the code.			- Remove the line of code above.			- Right-click and select 'Accept' to compile the new version of the method			- click the button 'Proceed' to continue execution.			".			PharoTutorial next. ! !----STARTUP----2015-10-10T13:14:22.107495-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!!Object methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 13:36'!subclass: aString instanceVariableNames: aString2 classVariableNames: aString3 poolDictionaries: aString4 	self shouldBeImplemented.! !Object subclass: #CS598Stack	instanceVariableNames: 'anArray top'	classVariableNames: ''	category: 'MyTest'!!CS598Stack commentStamp: 'SandeepDasgupta 10/10/2015 14:30' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:this is s testAllCurrentPackagesContainScriptLoader !!CS598Stack class methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 14:33'!	push: item   | anArray |top := top + 1.   anArray at: top put: item! !CS598Stack class	instanceVariableNames: 'top anArray'	!!CS598Stack class methodsFor: 'accessing' stamp: 'SandeepDasgupta 10/10/2015 14:34' prior: 33594621!push: item   top := top + 1.   anArray at: top put: item! !!CS598Stack class methodsFor: 'accessing' stamp: 'SandeepDasgupta 10/10/2015 14:36'!pop	"comment stating purpose of message"	| item |	item := anArray at: top.   top := top-1.   ^ item! !!CS598Stack class methodsFor: 'accessing' stamp: 'SandeepDasgupta 10/10/2015 14:36'!setsize: n   anArray := Array new: n.   top := 0.! !!CS598Stack class methodsFor: 'accessing' stamp: 'SandeepDasgupta 10/10/2015 14:40' prior: 33595197!setsize: n   anArray := Array new: n.   top := 0.! !!CS598Stack methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 14:44'!setsize: anInteger 	self shouldBeImplemented.! !"MyTest"!!CS598Stack methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 14:51' prior: 33595486!setsize: n 	anArray := Array new: n.   top := 0.! !!CS598Stack methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 14:52'!push: item   top := top+1.   anArray at: top put: item! !!CS598Stack methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 14:53'!pop 	| item |    item := anArray at: top.   top := top-1.   ^ item! !SimpleSwitchMorph  subclass: #LOCell	instanceVariableNames: 'mouseAction'	classVariableNames: ''	category: 'MyTest'	!!LOCell commentStamp: 'SandeepDasgupta 10/10/2015 15:01' prior: 0!This is a test number 2.!!LOCell methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 15:07'!initialize	super initialize.	self label: ''.	self borderWidth: 2.	bounds :=  0@0 corner: 16@16.	offColor := Color  paleYellow.	onColor   := Color paleBlue darker.	self useSquareCorners.	self turnOff.	! !BorderedMorph  subclass: #LOGame	instanceVariableNames: ''	classVariableNames: ''	category: 'MyTest'!!LOGame commentStamp: 'SandeepDasgupta 10/10/2015 15:15' prior: 0!The actual Game!!LOGame methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 15:17'!initialize	| sampleCell width height n cells |    super initialize.    n := self cellsPerSide.    sampleCell := LOCell new.    width := sampleCell width.    height := sampleCell height.    self bounds: (5@5 extent: ((width*n) @(height*n)) + (2 * self borderWidth)).    cells := Matrix new: n tabulate: [ :i :j | self newCellAt: i at: j ].! !!LOGame methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 15:28'!cellsPerSide   "The number of cells along each side of the game"    ^ 10 ! !!LOGame methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 15:28'!newCellAt: i at: j    "Create a cell for position (i,j) and add it to my on-screen    representation at the appropriate screen position.  Answer the new cell"    | c origin |    c := LOCell new.    origin := self innerBounds origin.    self addMorph: c.    c position: ((i - 1) * c width) @ ((j - 1) * c height) + origin.    c mouseAction: [self toggleNeighboursOfCellAt: i at: j]! !!LOGame methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 15:35' prior: 33597365!newCellAt: i at: j    "Create a cell for position (i,j) and add it to my on-screen    representation at the appropriate screen position.  Answer the new cell"    | c origin |    c := LOCell new.    origin := self innerBounds origin.    self addMorph: c.    c position: ((i - 1) * c width) @ ((j - 1) * c height) + origin.    c mouseAction: [self toggleNeighboursOfCellAt: i at: j].   ^ c.! !!LOCell methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 15:39'! mouseAction: aBlock    ^ mouseAction := aBlock Block! !!LOCell methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 15:41'!  mouseUp: anEvent    mouseAction value! !!LOGame methodsFor: 'game logic' stamp: 'SandeepDasgupta 10/10/2015 15:44'! toggleNeighboursOfCellAt: i at: j    (i > 1) ifTrue: [ (cells at: i - 1 at: j ) toggleState].    (i < self cellsPerSide) ifTrue: [ (cells at: i + 1 at: j) toggleState].    (j > 1) ifTrue: [ (cells at: i  at: j - 1) toggleState].    (j < self cellsPerSide) ifTrue: [ (cells at: i at: j + 1) toggleState].! !!LOCell methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 15:46' prior: 33598340!mouseAction: aBlock    ^ mouseAction := aBlock.! !!LOGame methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 15:48' prior: 33597853!newCellAt: i at: j    "Create a cell for position (i,j) and add it to my on-screen    representation at the appropriate screen position.  Answer the new cell"    | c origin |    c := LOCell new.    origin := self innerBounds origin.    self addMorph: c.    c position: ((i - 1) * c width) @ ((j - 1) * c height) + origin.    c mouseAction: [self toggleNeighboursOfCellAt: i at: j].   ^c.! !!LOCell methodsFor: 'accesing' stamp: 'SandeepDasgupta 10/10/2015 15:48' prior: 33599006!mouseAction: aBlock ! !----QUIT----2015-10-10T15:49:06.145743-05:00 Pharo4.0.image priorSource: 37338!----STARTUP----2015-10-10T15:59:42.213092-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!Object subclass: #Mandelbrot	instanceVariableNames: 'n'	classVariableNames: ''	category: 'Mandelbrot'!!Mandelbrot commentStamp: 'SandeepDasgupta 10/10/2015 22:25' prior: 0!    Instance Variables	n:		The input n represents the n*n bitmap.!!Mandelbrot methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 22:29'!initialize	"Initialize the bitmap matrix"	|image_Width_And_Height  inverse_w inverse_h bytes_per_row bitmap_size initial_r |		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_r := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_r at: ii put: inverse_h* (ii - 1) - 1.0.	].! !Object subclass: #Mandelbrot	instanceVariableNames: 'n bitmap image_Width_And_Height '	classVariableNames: ''	category: 'Mandelbrot'!!Mandelbrot methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 22:31' prior: 33600198!initialize	"Initialize the bitmap matrix"	|inverse_w inverse_h bytes_per_row bitmap_size initial_r |		image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_r := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_r at: ii put: inverse_h* (ii - 1) - 1.0.	].! !Object subclass: #Mandelbrot	instanceVariableNames: 'n bitmap image_Width_And_Height initial_r initial_i'	classVariableNames: ''	category: 'Mandelbrot'!!Mandelbrot methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 22:31' prior: 33601144!initialize	"Initialize the bitmap matrix"	|inverse_w inverse_h bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_r := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_r at: ii put: inverse_h* (ii - 1) - 1.0.	].! !!Mandelbrot methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 22:32' prior: 33602087!initialize	"Initialize the bitmap matrix"	|inverse_w inverse_h bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_r := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:35'!compute	"comment stating purpose of message"	|cr ci zr zi tr ti prefetched_Initial_i|		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'initialization' stamp: 'SandeepDasgupta 10/10/2015 22:36' prior: 33602862!initialize	"Initialize the bitmap matrix"	|inverse_w inverse_h bytes_per_row bitmap_size|		n := 16.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_r := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].! !Object subclass: #Mandelbrot	instanceVariableNames: ''	classVariableNames: ''	category: 'Mandelbrot'!Mandelbrot removeSelector: #initialize!!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:44'!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i bitmap initial_r initial_i n |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !Mandelbrot removeSelector: #compute!!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:46' prior: 33605466!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i  n bitmap |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:47' prior: 33607134!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i  n |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap_size := ByteArray new: bitmap_size.	bitmap_size from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap_size basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bit basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:48' prior: 33608766!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap_size := ByteArray new: bitmap_size.	bitmap_size from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap_size basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bit basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:49' prior: 33610403!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap_size basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bit basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:49' prior: 33612039!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bit basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:53' prior: 33613665!compute: arg_n	"comment stating purpose of message"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'computation' stamp: 'SandeepDasgupta 10/10/2015 22:55' prior: 33615286!compute: arg_n	"Compute the Mandelbrot matrix n*n"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 22:59'!printOn: aStream	super printOn: aStream	"Printing the bitmap"	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:03' prior: 33618514!printOn: aStream	super printOn: aStream	"Printing the bitmap"		stream nextPutAll: 'The bitmap '.! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:05' prior: 33618676!printOn: aStream	super printOn: aStream	"Printing the bitmap"		aStream nextPutAll: 'The bitmap '.! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:05' prior: 33618873!printOn: aStream	super printOn: aStream	"Printing the bitmap"		aStream nextPutAll: 'The bitmap '.! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:08' prior: 33619071!printOn: aStream	super printOn: aStream	aStream nextPutAll: 'Color '.! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:09' prior: 33619269!printOn: aStream	super printOn: aStream	"aStream nextPutAll: 'Color '."! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:10' prior: 33619438!printOn: aStream	super printOn: aStream.	 (0 = 1)		ifFalse: [ 			^ aStream				nextPutAll: 'Color '. 				].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:11' prior: 33619609!printOn: aStream	super printOn: aStream.				^ aStream				nextPutAll: 'Color '. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:11' prior: 33619819!printOn: aStream	super printOn: aStream.		aStream	nextPutAll: 'Color '. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:11' prior: 33620002!printOn: aStream	super printOn: aStream.		aStream	nextPutAll: ' Bitmap '. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:12' prior: 33620177!printOn: aStream	super printOn: aStream.		aStream	nextPutAll: bitmap. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:14' prior: 33620354!printOn: aStream	super printOn: aStream.		aStream	nextPutAll: 'bitmap'. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:17' prior: 33620527!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream	nextPutAll: image_Width_And_Height. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:19' prior: 33620702!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream	nextPutAll: 'image_Width_And_Height'. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:20' prior: 33621020!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream	nextPut: 'image_Width_And_Height'. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:20' prior: 33621340!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream	nextPut: image_Width_And_Height. 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:23' prior: 33621657!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		image_Width_And_Height printOn: aStream . 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:26' prior: 33621972!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream nextPutAll: 'P4'	aStream cr.	image_Width_And_Height printOn: aStream . 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:27' prior: 33622288!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream nextPutAll: 'P4'.	"aStream cr."	image_Width_And_Height printOn: aStream . 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:27' prior: 33622643!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		super printOn: aStream.		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:28' prior: 33623001!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:28' prior: 33623357!printOn: aStream	|image_Width_And_Height bytes_per_row|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:29' prior: 33623715!printOn: aStream	|image_Width_And_Height bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . 	aStream cr.		bitmap_size := image_Width_And_Height * bytes_per_row.	1 to: bitmap_size do: [ 				 ].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:31' prior: 33624141!printOn: aStream	|image_Width_And_Height bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . 	aStream cr.		bitmap_size := image_Width_And_Height * bytes_per_row.	1 to: bitmap_size do: [ :i |  		(bitmap basicAt: i)  printOn: aStream . 		 ].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:31' prior: 33624685!printOn: aStream	|image_Width_And_Height bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . 	aStream cr.		bitmap_size := image_Width_And_Height * bytes_per_row.	1 to: bitmap_size do: [ :i |  		(bitmap basicAt: i)  printOn: aStream .    ].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:33' prior: 33625275!printOn: aStream	|image_Width_And_Height bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . 	aStream cr.		bitmap_size := image_Width_And_Height * bytes_per_row.	1 to: bitmap_size do: [ :i |  		(bitmap basicAt: i)  printOn: aStream . 		aStream nextPutAll: ' '.   ].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:35' prior: 33625865!printOn: aStream	|image_Width_And_Height bytes_per_row bitmap_size|		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		"super printOn: aStream."		aStream nextPutAll: 'P4'.	aStream cr.	image_Width_And_Height printOn: aStream . 	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream . 	aStream cr.		bitmap_size := image_Width_And_Height * bytes_per_row.	1 to: bitmap_size do: [ :i |  		(bitmap basicAt: i)  printOn: aStream .   ].! !----STARTUP----2015-10-10T23:41:30.232869-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!Object subclass: #Mandelbrot	instanceVariableNames: 'n bitmap'	classVariableNames: ''	category: 'MyTest'!!Mandelbrot commentStamp: 'SandeepDasgupta 10/10/2015 23:45' prior: 0!To compute the mandelbrot set for n*n matrix.!!Mandelbrot methodsFor: 'as yet unclassified' stamp: 'SandeepDasgupta 10/10/2015 23:47'!compute: arg_n	"comment stating purpose of message"|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii.    1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:51'!printOn: aStream		| image_Width_And_Height  bytes_per_row|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:52' prior: 33629005!printOn: aStream		| image_Width_And_Height  bytes_per_row|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:54' prior: 33629329!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.		bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:55' prior: 33629737!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.		bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.		aStream nextPutAll: ' '.	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/10/2015 23:56' prior: 33630290!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.		bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.		"aStream nextPutAll: ' '."	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:08' prior: 33630870!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.		"aStream nextPutAll: ' '."	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:09' prior: 33631452!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		"(bitmap basicAt: ii) printOn: aStream."		aStream nextPut: (bitmap basicAt: ii).		"aStream nextPutAll: ' '."	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:11' prior: 33632049!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.	aStream nextPutAll: bitmap.		"1 to: bitmap_size do: [ :ii |		"(bitmap basicAt: ii) printOn: aStream."				"aStream nextPutAll: ' '."	]."		 ! !Object subclass: #Mandelbrot	instanceVariableNames: 'n bitmap'	classVariableNames: ''	category: 'MyTest'!!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:12' prior: 33632689!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.		1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.				"aStream nextPutAll: ' '."	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:15' prior: 33633434!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.				"aStream nextPutAll: ' '."	].		 ! !!Mandelbrot methodsFor: 'printing' stamp: 'SandeepDasgupta 10/11/2015 00:16' prior: 33634036!printOn: aStream		| image_Width_And_Height  bytes_per_row bitmap_size|.		image_Width_And_Height := (((n + 7) >>  3) << 3 ).	bytes_per_row := (n + 7) >>  3.		aStream nextPutAll: 'P4';cr.	image_Width_And_Height printOn: aStream.	aStream nextPutAll: ' '.	image_Width_And_Height printOn: aStream.	aStream cr.	aStream binary.	bitmap_size := bytes_per_row*image_Width_And_Height.	1 to: bitmap_size do: [ :ii |		(bitmap basicAt: ii) printOn: aStream.	].		 ! !!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/11/2015 00:16' prior: 33627402!compute: arg_n	"comment stating purpose of message"|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   |		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |	prefetched_Initial_i := initial_i  at: ii. 	1 to: image_Width_And_Height do: [ :jj |  		cr := initial_r at:jj.		ci := prefetched_Initial_i.		zr := 0.0.		zi := 0.0.		tr := 0.0.		ti := 0.0.				(1 to: 50) do: [  :kk | 	   		zi := 2.0 * (zr * zi) + ci.	  		zr := tr - ti + cr.	  		tr := zr * zr.	  		ti := zi *zi.				   ((tr + ti) > 4.0) 				ifTrue:[					|posn bit byte| 					posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.					"bit := ((jj - 1) % 8) + 1."					bit := 8 - ((jj - 1) % 8).					byte := bitmap basicAt:posn asInteger.					byte := (byte bitAt:bit  put: 0).					bitmap basicAt:posn  put: byte.  				] 				ifFalse: [].		].			 ].].! !----STARTUP----2015-10-11T22:44:24.556081-05:00 as /home/sdasgup3/Install/pharo4.0/shared/Pharo4.0.image!----QUIT/NOSAVE----2015-10-11T22:44:54.993517-05:00 Pharo4.0.image priorSource: 45237!----SNAPSHOT----2015-10-12T00:03:01.754822-05:00 session_1.image priorSource: 45237!----STARTUP----2015-10-12T00:10:48.170451-05:00 as /home/sdasgup3/Install/pharo4.0/shared/session_1.image!!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 00:40' prior: 33635208!compute: arg_n	"comment stating purpose of message"|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.  					] 					ifFalse: [].			].			 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.aStream nextPutAll: image_Width_And_Height.aStream nextPutAll: ' '.aStream nextPutAll: image_Width_And_Height.aStream cr.aStream nextPutAll: bitmap.aStream close.! !!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 00:44' prior: 33637218!compute: arg_n	"comment stating purpose of message"|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.  					] 					ifFalse: [].			].			 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.image_Width_And_Height  printOn: aStream.aStream nextPutAll: ' '.image_Width_And_Height  printOn: aStream.aStream cr.aStream nextPutAll: bitmap.aStream close.! !----SNAPSHOT----2015-10-12T00:50:11.246499-05:00 session_1.image priorSource: 82494!!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 00:52' prior: 33639098!compute: arg_n	"Compute and Print the Mandelbrot bitmap"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.  					] 					ifFalse: [].			].			 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.image_Width_And_Height  printOn: aStream.aStream nextPutAll: ' '.image_Width_And_Height  printOn: aStream.aStream cr.aStream nextPutAll: bitmap.aStream close.! !!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 00:53'!compute_n_Print: arg_n	"Compute and Print the Mandelbrot bitmap"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.  					] 					ifFalse: [].			].			 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.image_Width_And_Height  printOn: aStream.aStream nextPutAll: ' '.image_Width_And_Height  printOn: aStream.aStream cr.aStream nextPutAll: bitmap.aStream close.! !Mandelbrot removeSelector: #compute:!!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 00:54'!compute_n_print: arg_n	"Compute and Print the Mandelbrot bitmap"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.  					] 					ifFalse: [].			].			 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.image_Width_And_Height  printOn: aStream.aStream nextPutAll: ' '.image_Width_And_Height  printOn: aStream.aStream cr.aStream nextPutAll: bitmap.aStream close.! !Mandelbrot removeSelector: #compute_n_Print:!----QUIT----2015-10-12T10:47:55.034849-05:00 session_1.image priorSource: 86446!----STARTUP----2015-10-12T10:57:42.542653-05:00 as /home/sdasgup3/Install/pharo4.0/shared/session_1.image!!Mandelbrot methodsFor: 'initialize' stamp: 'SandeepDasgupta 10/12/2015 11:02' prior: 33644844!compute_n_print: arg_n	"Compute and Print the Mandelbrot bitmap"	|image_Width_And_Height inverse_w inverse_h bytes_per_row bitmap_size cr ci zr zi tr ti prefetched_Initial_i  initial_r initial_i   aStream|		n := arg_n.	image_Width_And_Height := (((n + 7) >>  3) << 3 ).		inverse_w  := 2.0 / image_Width_And_Height.	inverse_h  := 2.0 / image_Width_And_Height.	bytes_per_row := (n + 7) >>  3.	bitmap_size := bytes_per_row*image_Width_And_Height.	bitmap := ByteArray new: bitmap_size.	bitmap from: 1 to: bitmap_size put: 255.	initial_r := Array new:  image_Width_And_Height.	initial_i := Array new:  image_Width_And_Height.	(1 to: image_Width_And_Height) do: 	[ :ii |       initial_r at: ii put: inverse_w* (ii - 1 ) - 1.5.      initial_i at: ii put: inverse_h* (ii - 1) - 1.0.	].		1 to: image_Width_And_Height  do: [ :ii |		prefetched_Initial_i := initial_i  at: ii. 		1 to: image_Width_And_Height do: [ :jj |  			cr := initial_r at:jj.			ci := prefetched_Initial_i.			zr := 0.0.			zi := 0.0.			tr := 0.0.			ti := 0.0.					[ :break | 			(1 to: 50) do: [  :kk | 	   			zi := 2.0 * (zr * zi) + ci.	  			zr := tr - ti + cr.	  			tr := zr * zr.	  			ti := zi *zi.				   		((tr + ti) > 4.0) 					ifTrue:[						|posn bit byte| 						posn := ( ( ((ii-1)*(image_Width_And_Height/8)) + 1) + ((jj-1)/8)) asInteger.						bit := 8 - ((jj - 1) % 8).						byte := bitmap basicAt:posn asInteger.						byte := (byte bitAt:bit  put: 0).						bitmap basicAt:posn  put: byte.						break value.  					] 					ifFalse: [].			].				] valueWithExit.		 ].]."File Printing"aStream := FileStream newFileNamed: 'output.pbm'.aStream nextPutAll: 'P4';cr.image_Width_And_Height  printOn: aStream.aStream nextPutAll: ' '.image_Width_And_Height  printOn: aStream.aStream cr.aStream nextPutAll: bitmap.aStream close.! !----SNAPSHOT----2015-10-12T11:30:02.441009-05:00 session_1.image priorSource: 92254!